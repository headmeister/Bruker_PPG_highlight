{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Bruker Pulse Program",
	"patterns": [
		{
			"include": "#keywords"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#comments"
		},
		{
			"include": "#delays"
		},
		{
			"include": "#definitions"
		},
		{
			"include": "#PVM_parameters"
		},
		{
			"include": "#operators"
		},
		{
			"include": "#lists"
		},
		{
			"include": "#includes"
		},
		{
			"include": "#functions"
		},
		{
			"include": "#MACROS"
		},
		{
			"include": "#gradient_controll"
		},
		{
			"include": "#bool_oop"
		},
		{
			"include": "#transmitters"
		},
		{
			"include": "#pulses"
		},
		{
			"include": "#list_operators"
		}


	],
	"repository": {
		"keywords": {
			"patterns": [{
				"name": "keyword.control.ppg",
				"match": "\\b(#?if|while|for|return|else|lo to|times|goto|plusminus)\\b"
			},
			{
				"name": "keyword.control.ppg",
				"match": "(#if|#while)"
			}
		]
		},
		"strings": {
			"name": "string.quoted.double.ppg",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.ppg",
					"match": "\\\\."
				}
			]
		},
		"comments":{
			"name":"comment.line.ppg",
			"begin": ";",
			"end": "\n"
		},
		"delays":{
			"patterns": [
				{
					"name":"variable",
					"match": "\\b(([0-9])*u|([0-9])*m|d([0-9])*)\\b"
				}

			]	
		},
		"definitions":{
			"patterns": [
				{
					"name":"keyword.other.ppg",
					"match": "\\b(define|subr)\\b"
				},
				{
					"name":"keyword.other.ppg",
					"match": "#define\\b"
				}

			]

		},
		"PVM_parameters":{
			"patterns": [
				{
					"name":"variable.ppg",
					"match": "\\$([A-Za-z0-9_])*"
				},
				{
					"name":"variable.ppg",
					"match": "sp[0-9]+"
				}

			]
		},
		"operators":{
			"patterns": [
				{
					"name":"keyword.operator.ppg",
					"match": "(\\+|==)"
				},
				{
					"match": "!=|<=|>=|==|<|>",
					"name": "keyword.operator.comparison.c"
				}

			]
		},
		"lists":{
			"patterns": [
				{
					"name":"entity.name.class.ppg",
					"match": "(\\blist<)(.+)(>)",
					"captures": {
						"1":{"name": "entity.name.class.ppg"},
						"2":{"name": "keyword.other.ppg"},
						"3":{"name": "entity.name.class.ppg"}
					}
				},
				{
					"name":"entity.name.class.ppg",
					"match": "\\bloopcounter|delay\\b"
				}

			]
		},
		"includes":{
			"patterns": [
				{
					"name":"meta.preprocessor.ppg",
					"match": "#include"
				}

			]
		},
		"functions":{
			"patterns": [
				{
					"match": "([A-Za-z0-9_]+\\()(.*?)(\\))",
					"captures" : {
						   "1" : { "name" : "entity.name.function.ppg" },
						   "3" : { "name" : "entity.name.function.ppg" }
					}
						
				}

			]
		},
		"MACROS":{
			"patterns": [
				{
					"name":"invalid",
					"match": "\\b(ADC_START(_JOB[0-9])?|ADC_END(_JOB[0-9])?|NOPH|gatepulse|INIT_DEVICES|GRAD_SYNC|gc_control|exit|SWITCH_JOB[0-9]|NEXT_RG|RG_JOB[0-9]|INIT_DEVICES_JOBS)\\b"
				}

			]
		},
		"gradient_controll":{
			"patterns": [
				{
					
					"match": "(\\b(grad_shape|grad_ramp)\\b{)(.*)(})",
					"captures": {
						"1":{"name":"keyword.other.ppg"},
						"2":{"name":"keyword.other.ppg"},
						"3":{"patterns":[
								{
									"match": "[A-Za-z0-9_]+\\(\\)",
									"name":"entity.name.class.ppg"
								}
						]
							
						},
						"4":{"name":"keyword.other.ppg"}
						
					}
					
				},
				{
					"match": "\\bgrad_off\\b",
					"name": "keyword.other.ppg"
				}

			]
		},
		"bool_oop":{
			"patterns": [
				{
					"name":"keyword.other.ppg",
					"match": "\\b(Yes|No)\\b"
				}

			]
		},
		"list_operators":{
			"patterns": [
				{
					"name":"keyword.other.ppg",
					"match": "(\\.store|\\.restore|\\.inc|\\.dec|\\.res)\\b"
				}

			]
		},
		"transmitters":{
			"patterns": [
				{
					"name":"constant.numeric",
					"match": "\\b(f[0-9]+)\\b"
				}

			]
		},
		"pulses":{
			"patterns": [
				{
					"name":"constant.numeric",
					"match": "\\b(p[0-9]+)\\b"
				}

			]
		}
		
		
	},
	"scopeName": "source.ppg"
}